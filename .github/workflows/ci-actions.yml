name: CI

on:
  push:
    paths-ignore:
      - "README.md"
  pull_request:
    types: [assigned, opened, synchronize, reopened, ready_for_review, edited]
    paths-ignore:
      - "README.md"
  schedule:
    - cron: "0 0 * * *"

jobs:
#  linux-jdk8-tests:
#    name: JDK 8 Tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 8
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@68381f2c0646f942f70b69f8e81fe10e1ed5d293
#        with:
#          java-version: 8
#
#      - uses: nanasess/setup-chromedriver@master
#      - name: maven-settings-xml-action
#        uses: whelk-io/maven-settings-xml-action@v13
#        with:
#          repositories: '[{"id":"sonatype-snapshots","url":"https://oss.sonatype.org/content/repositories/snapshots/"}, {"id":"jboss-releases", "url":"https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"}, {"id":"redhat-ga-repository", "url":"https://maven.repository.redhat.com/ga/"}, {"id":"central", "url":"https://repo.maven.apache.org/maven2"}]'
#          plugin_repositories: '[{"id":"redhat-ga-repository", "url":"https://maven.repository.redhat.com/ga/"}, {"id":"central", "url":"https://repo.maven.apache.org/maven2"}]'
#      - name: Use Node.js 12
#        uses: actions/setup-node@v1
#        with:
#          node-version: 12
#      - name: Install Bower and PhantomJS
#        run: npm install -g bower phantomjs-prebuilt
#
#      - name: Tests
#        run: mvn install -B -U -Pfindbugs -e -X
#      - name: Prepare failure archive (if tests failed)
#        if: failure()
#        shell: bash
#        run: find . -wholename '**/target/surefire-reports/**/*' -o -wholename '**/target/e2e*' -o -wholename '**/target/findbugs/*' -type d | tar -czvf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: linux-jdk8-tests
#          path: "test-reports.tgz"
#
#  linux-jdk8-tests-production:
#    name: JDK 8 Tests Production
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 8
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@68381f2c0646f942f70b69f8e81fe10e1ed5d293
#        with:
#          java-version: 8
#
#      - name: maven-settings-xml-action
#        uses: whelk-io/maven-settings-xml-action@v13
#        with:
#          repositories: '[{"id":"sonatype-snapshots","url":"https://oss.sonatype.org/content/repositories/snapshots/"}, {"id":"jboss-releases", "url":"https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"}, {"id":"redhat-ga-repository", "url":"https://maven.repository.redhat.com/ga/"}, {"id":"central", "url":"https://repo.maven.apache.org/maven2"}]'
#          plugin_repositories: '[{"id":"redhat-ga-repository", "url":"https://maven.repository.redhat.com/ga/"}, {"id":"central", "url":"https://repo.maven.apache.org/maven2"}]'
#      - name: Use Node.js 12
#        uses: actions/setup-node@v1
#        with:
#          node-version: 12
#      - name: Install Bower and PhantomJS
#        run: npm install -g bower phantomjs-prebuilt
#
#      - name: Tests
#        run: mvn install -B -U -DskipTests -Dwebpack.environment=production -e -X
#      - name: Prepare failure archive (if tests failed)
#        if: failure()
#        shell: bash
#        run: find . -wholename '**/target/surefire-reports/**/*' -o -wholename '**/target/e2e*' -o -wholename '**/target/findbugs/*' -type d | tar -czvf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: linux-jdk8-tests-production
#          path: "test-reports.tgz"
#
#  linux-jdk11-tests:
#    name: JDK 11 Tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        # Uses sha for added security since tags can be updated
#        uses: joschi/setup-jdk@68381f2c0646f942f70b69f8e81fe10e1ed5d293
#        with:
#          java-version: 11
#
#      - name: maven-settings-xml-action
#        uses: whelk-io/maven-settings-xml-action@v13
#        with:
#          repositories: '[{"id":"sonatype-snapshots","url":"https://oss.sonatype.org/content/repositories/snapshots/"}, {"id":"jboss-releases", "url":"https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"}, {"id":"redhat-ga-repository", "url":"https://maven.repository.redhat.com/ga/"}, {"id":"central", "url":"https://repo.maven.apache.org/maven2"}]'
#          plugin_repositories: '[{"id":"redhat-ga-repository", "url":"https://maven.repository.redhat.com/ga/"}, {"id":"central", "url":"https://repo.maven.apache.org/maven2"}]'
#      - name: Use Node.js 12
#        uses: actions/setup-node@v1
#        with:
#          node-version: 12
#      - name: Install Bower and PhantomJS
#        run: npm install -g bower phantomjs-prebuilt
#
#      - name: Preliminary setup
#        run: |
#          mvn -f services/pom.xml org.jboss.forge.furnace:furnace-maven-plugin:2.28.2.Final:addon-install@deploy-addons &&
#          mvn -f services/pom.xml org.apache.maven.plugins:maven-dependency-plugin:unpack@unpack &&
#          mvn -f tests/wildfly-dist/pom.xml org.apache.maven.plugins:maven-dependency-plugin:unpack@unpack
#      - name: Unit tests
#        run: mvn -Dsurefire.server.jvm.args='--add-modules java.se' surefire:test -B -U -Pfindbugs -e -X
#      - name: Integration tests
#        run: mvn resources:copy-resources@copy-npm-config resources:copy-resources@copy-database antrun:run@unzip-reports dependency:copy@copy-wars dependency:unpack@unpack exec:exec@yarn-install exec:exec@webdriver-manager-update source:jar-no-fork@attach-sources wildfly:start@start-wildfly wildfly:execute-commands@start-wildfly failsafe:integration-test@failsafe-integration-tests exec:exec@run-e2e exec:exec@make-results-report wildfly:shutdown@stop-wildfly -f tests/e2e/pom.xml
#      - name: Karma tests
#        run: mvn com.kelveden:maven-karma-plugin:start@karmaTests -f ui/pom.xml
#
#      - name: Prepare failure archive (if tests failed)
#        if: failure()
#        shell: bash
#        run: find . -wholename '**/target/surefire-reports/TEST-*.xml' -o -wholename '**/target/failsafe-reports/TEST-*.xml' -o -wholename '**/target/karma-reports/test-results.xml' -type d | tar -czvf test-reports.tgz -T -
#      - name: Upload failure Archive (if maven failed)
#        uses: actions/upload-artifact@v1
#        if: failure()
#        with:
#          name: linux-jdk8-tests
#          path: "test-reports.tgz"
#
  build-artifacts:
    name: Create web distribution
    runs-on: ubuntu-latest
    steps:
      - name: Clone current windup-web
        uses: actions/checkout@v2
        with:
          path: 'windup-web'
      - name: Clone windup-web-distribution
        uses: actions/checkout@v2
        with:
          repository: 'windup/windup-web-distribution'
          path: 'windup-web-distribution'
      - name: Set
        run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
      - name: Test
        run: echo $GITHUB_SHA_SHORT
      - name: Set up JDK 8
        # Uses sha for added security since tags can be updated
        uses: joschi/setup-jdk@68381f2c0646f942f70b69f8e81fe10e1ed5d293
        with:
          java-version: 8

      - uses: nanasess/setup-chromedriver@master
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v13
        with:
          repositories: '[{"id":"sonatype-snapshots","url":"https://oss.sonatype.org/content/repositories/snapshots/"}, {"id":"jboss-releases", "url":"https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/"}, {"id":"redhat-ga-repository", "url":"https://maven.repository.redhat.com/ga/"}, {"id":"central", "url":"https://repo.maven.apache.org/maven2"}]'
          plugin_repositories: '[{"id":"redhat-ga-repository", "url":"https://maven.repository.redhat.com/ga/"}, {"id":"central", "url":"https://repo.maven.apache.org/maven2"}]'
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install Bower and PhantomJS
        run: npm install -g bower phantomjs-prebuilt

      - name: Build windup-web
        run: mvn install -DskipTests=true -f windup-web
      - name: Build windup-web-distribution
        run: mvn install -DskipTests=true -f windup-web-distribution
      - name: Rename distribution
        run: mv windup-web-distribution/target/mta-web-distribution-*-with-authentication.zip mta-server.zip
      - name: Upload distribution
        uses: actions/upload-artifact@v1
        with:
          name: mta-server
          path: 'mta-server.zip'

  ui-unit-test:
    name: UI tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn --cwd ui-pf4/src/main/webapp/ install
      - run: yarn --cwd ui-pf4/src/main/webapp/ build
      - run: yarn --cwd ui-pf4/src/main/webapp/ test --coverage --watchAll=false
      - uses: codecov/codecov-action@v1
        with:
          flags: unittests

  e2e-chrome:
    runs-on: ${{ matrix.os }}
    needs: build-artifacts
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download distribution
        uses: actions/download-artifact@v1
        with:
          name: mta-server
          path: .
      - name: Extract distribution
        shell: bash
        run: unzip -o mta-server.zip -d mta-server
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: ui-pf4/src/main/webapp/
          config: pageLoadTimeout=100000,baseUrl=http://localhost:8080/mta-ui,chromeWebSecurity=false
          browser: chrome
          start: yarn run mta:start
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 240
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MTA_HOME: ${{ readlink -f mta-server/mta-web-distribution-*/run_mta.sh }}
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: e2e-screenshots-chrome-${{ matrix.os }}
          path: ui-pf4/src/main/webapp/cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: e2e-videos-chrome-${{ matrix.os }}
          path: ui-pf4/src/main/webapp/cypress/videos

  e2e-firefox:
    runs-on: macos-latest
    needs: build-artifacts
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download distribution
        uses: actions/download-artifact@v1
        with:
          name: mta-server
          path: .
      - name: Extract distribution
        shell: bash
        run: unzip -o mta-server.zip -d mta-server
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: ui-pf4/src/main/webapp/
          config: pageLoadTimeout=100000,baseUrl=http://localhost:8080/mta-ui
          browser: firefox
          start: yarn run mta:start
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 240
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MTA_HOME: ${{ readlink -f mta-server/mta-web-distribution-*/run_mta.sh }}
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: e2e-screenshots-firefox
          path: ui-pf4/src/main/webapp/cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: e2e-videos-firefox
          path: ui-pf4/src/main/webapp/cypress/videos

  e2e-edge:
    runs-on: macos-latest
    needs: build-artifacts
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Download distribution
        uses: actions/download-artifact@v1
        with:
          name: mta-server
          path: .
      - name: Extract distribution
        shell: bash
        run: unzip -o mta-server.zip -d mta-server
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: ui-pf4/src/main/webapp/
          config: pageLoadTimeout=100000,baseUrl=http://localhost:8080/mta-ui
          browser: edge
          start: yarn run mta:start
          wait-on: 'http://localhost:8080'
          wait-on-timeout: 240
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MTA_HOME: ${{ readlink -f mta-server/mta-web-distribution-*/run_mta.sh }}
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: e2e-screenshots-edge
          path: ui-pf4/src/main/webapp/cypress/screenshots
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: e2e-videos-edge
          path: ui-pf4/src/main/webapp/cypress/videos

  e2e-coverage:
    runs-on: ubuntu-latest
    needs: build-artifacts
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download distribution
        uses: actions/download-artifact@v1
        with:
          name: mta-server
          path: .
      - name: Extract distribution
        shell: bash
        run: unzip -o mta-server.zip -d mta-server
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          working-directory: ui-pf4/src/main/webapp/
          config: pageLoadTimeout=100000,baseUrl=http://localhost:3000,chromeWebSecurity=false
          browser: chrome
          start: yarn run start:cra-mta
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 240
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MTA_HOME: ${{ readlink -f mta-server/mta-web-distribution-*/run_mta.sh }}
      - run: ls ui-pf4/src/main/webapp/
      - run: cd ui-pf4/src/main/webapp && npx nyc report --reporter=lcov
      - run: pwd
      - run: ls
      - uses: codecov/codecov-action@v1
        with:
          flags: e2etests
